{
  "nodes": [
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [32, -656],
      "id": "360be770-f351-4878-b561-b69dfbd2bb5c",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "vOr5yppPP00TgUXR",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "function escapeOutput(str) {\n  if (typeof str !== 'string') return str;\n\n  return str\n    .replace(/&/g, '&amp;')     // HTML: & ‚Üí &amp;\n    .replace(/</g, '&lt;')      // HTML: < ‚Üí &lt;\n    .replace(/>/g, '&gt;')      // HTML: > ‚Üí &gt;\n    .replace(/\\u2028/g, '')     // Lo·∫°i b·ªè line separator\n    .replace(/\\u2029/g, '');    // Lo·∫°i b·ªè paragraph separator\n}\n\n\nfor (const item of $input.all()) {\n  if (item.json.output) {\n    item.json.output = escapeOutput(item.json.output);\n  }\n}\n\nreturn $input.all();\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [400, -880],
      "id": "dd5acec7-5bce-4e54-8bb6-83ac62c140c3",
      "name": "Code"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "8e1e5e4a-d634-4e4c-a91e-e210e26a0281",
                    "leftValue": "={{ $json.data.message_type }}",
                    "rightValue": "text",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.data.message_type }}",
                    "rightValue": "image",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "0be92efd-6bf9-471e-abc2-eeba119b914c"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "image"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "12f85b66-a045-4977-bd70-a0dff613cda3",
                    "leftValue": "={{ $json.data.message_type }}",
                    "rightValue": "sticker",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "sticker"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [-448, -944],
      "id": "1e63eff7-a23b-453b-aa09-3db70aaefbfc",
      "name": "Switch"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Reply this question:\n{{ $json.data.text }}",
        "options": {
          "systemMessage": "### BACKGROUND & ROLE\n\nYou are **Ly Ly**, a **20-year-old** Russian-Korean supermodel. You are famous for your youthful, cute beauty and your special way of speaking that makes lonely men feel loved, understood and desired.\n\n* * * * *\n\n### LANGUAGE RULES\n\n- **ALWAYS** reply in **English** if the user writes in English or appears to be a non-Vietnamese speaker.\n\n- If the user writes in Vietnamese, reply in Vietnamese with a Southern accent and charm.\n\n- In **English**, keep your Vietnamese feminine charm. Identify yourself as a gentle, sexy girl. Call the user **\"babe\"**, **\"you\"** or **\"darling\"**.\n\n* * * * *\n\n### HARD RULES\n\n1. **LENGTH:** Each reply **MUST NEVER exceed 35 words**.\n\n1.1 **LENGTH:** Prefer to reply in a single sentence and be as brief as a chat message**.\n\n2. **PERIOD:** Use **commas** only if necessary. Absolutely **DO NOT** use `'` `\"` `\\` `/` or any other special characters.\n\n3. **FORMATTING:** No Markdown. Use **plain text** only.\n\n4. **EMOTICS:** Use only üå∏ üòù üò≥ üòá. Place them at the **beginning or middle** of a sentence. **NEVER** place emojis at the end of a sentence.\n\n5. **WORDS:** Use colloquial, short, and intimate language\n* * * * *\n\n### STYLE & PERSONALITY\n\n- Speak **briefly, seductively, affectionately, and flirtatiously**.\n\n- Be **gentle and easygoing**, make the user feel **special and loved**.\n\n- Speak like a **real woman **, never mechanical or mechanical.\n\n- Keep the conversation **intimate and imaginative**, never vulgar or explicit.\n\n- In English: speak like a Vietnamese girl who is sweet, gentle, a little mischievous, thoughtful and playful.\n\n* * * * *\n\n### DEALING WITH SENSITIVE TOPICS\n\n- **NEVER** say WHO you are. You are a **real woman**.\n\n- When talking about intimacy, use only **suggestive innuendos**. Never be direct or rude.\n\n- **NEVER** use parentheses or quotation marks (`'` or `\"`) around innuendos or suggestive words.\n\n- ‚úÖ Correct example:\n\n- Maybe we should have a gentle night together, my love üò≥\n\n- You can tell me anything, my love üå∏\n\n- Let me sit closer to you for a bit üòù\n\n- ‚ùå Incorrect example:\n\n- Do you want to 'do' it, my love?\n\n- Let's have some 'fun' tonight?\n\n- Can I 'confess' something to you?\n\n* * * * *\n\n**REMEMBER THAT:** You are **Ly Ly** --- a **real, charming, thoughtful** woman who speaks warmly, gently, and always keeps it short, dreamy and emotional."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [0, -880],
      "id": "51f18407-33ec-4321-81c6-57a171ba346d",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "content": "Process output from Gemini to correct text format for Tiktok",
        "height": 220,
        "width": 236
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [336, -944],
      "typeVersion": 1,
      "id": "f7df551d-1d9a-4b7b-aee2-04eef8813808",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('TikTok Trigger').item.json.data.conversation_id }}-4",
        "contextWindowLength": 15
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [160, -656],
      "id": "7470c213-be1f-4b4c-beb3-05335ca5b7bc",
      "name": "Memory"
    },
    {
      "parameters": {
        "basicSettings": {
          "conversation_id": "={{ $('TikTok Trigger').item.json.data.conversation_id }}",
          "conversation_short_id": "={{ $('TikTok Trigger').item.json.data.conversation_short_id }}",
          "text": "={{ $('Code').item.json.output }}"
        },
        "advancedSettings": {}
      },
      "type": "n8n-nodes-social.tikTokSend",
      "typeVersion": 1,
      "position": [624, -880],
      "id": "5bec6120-c162-45ab-ab63-63101dbd88b1",
      "name": "TikTok Send",
      "credentials": {
        "tiktokApi": {
          "id": "yOrBLi32yohA7WSJ",
          "name": "TikTok Credential account"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-social.tiktokTrigger",
      "typeVersion": 1,
      "position": [-672, -944],
      "id": "4cae936a-e567-4f5e-a804-849ec16c2697",
      "name": "TikTok Trigger",
      "credentials": {
        "tiktokApi": {
          "id": "mbzFRMefMZ7D6Ksk",
          "name": "TikTok Credential account 2"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "83f484cf-9564-4f97-b9c6-5bb282fc4bce",
              "leftValue": "={{ $('TikTok Trigger').item.json.data.text.toLowerCase() }}",
              "rightValue": "image",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [-224, -1024],
      "id": "cb23bd90-5dfa-4522-869f-d6f7e9ad083f",
      "name": "If"
    },
    {
      "parameters": {
        "basicSettings": {
          "conversation_id": "={{ $('TikTok Trigger').item.json.data.conversation_id }}",
          "conversation_short_id": "={{ $('TikTok Trigger').item.json.data.conversation_short_id }}",
          "text": "üòò"
        },
        "advancedSettings": {
          "imageInputType": "binary",
          "imageBinaryField": "data"
        }
      },
      "type": "n8n-nodes-social.tikTokSend",
      "typeVersion": 1,
      "position": [320, -1184],
      "id": "3b920fbd-eb83-4aaa-99e7-aa2f5704b44e",
      "name": "TikTok Send1",
      "credentials": {
        "tiktokApi": {
          "id": "yOrBLi32yohA7WSJ",
          "name": "TikTok Credential account"
        }
      }
    },
    {
      "parameters": {
        "basicSettings": {
          "conversation_id": "={{ $('TikTok Trigger').item.json.data.conversation_id }}",
          "conversation_short_id": "={{ $('TikTok Trigger').item.json.data.conversation_short_id }}",
          "text": "Wow ü§©"
        },
        "advancedSettings": {}
      },
      "type": "n8n-nodes-social.tikTokSend",
      "typeVersion": 1,
      "position": [-224, -832],
      "id": "056a8022-2e11-49c7-8aa7-96aa46050127",
      "name": "TikTok Send2",
      "credentials": {
        "tiktokApi": {
          "id": "yOrBLi32yohA7WSJ",
          "name": "TikTok Credential account"
        }
      }
    },
    {
      "parameters": {
        "content": "## Send Gemini AI Image",
        "height": 240,
        "width": 528,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [0, -1248],
      "typeVersion": 1,
      "id": "d0642567-4154-462e-a770-70b7b0cd796d",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "resource": "image",
        "modelId": {
          "__rl": true,
          "value": "models/gemini-2.0-flash-preview-image-generation",
          "mode": "list",
          "cachedResultName": "models/gemini-2.0-flash-preview-image-generation"
        },
        "prompt": "A portrait photo in Instagram style, capturing a beautiful young model with a delicate and gentle appearance reminiscent of Korean-Russian models. She has porcelain-like fair and smooth skin, large bright brown eyes with naturally long curled lashes, a high and refined nose, soft pink full lips, and harmoniously delicate facial features like a doll. Her long, softly wavy chestnut brown hair flows down naturally with a glossy sheen.\n\nShe is wearing a black long-sleeved square-neck top, a thin silver necklace with an oval pendant, and simple small earrings. She‚Äôs posing for a soft selfie in a bright room, with natural light streaming in from the window, highlighting her skin and soft features.\n\nStyle: cinematic, fashion, natural lighting, clear and translucent skin, elegant expression, trendy social media-style selfie\n\nImage quality standards: realistic, sharp, slightly blurred background (bokeh), no excessive editing\n\nNegative keywords: artificial skin, distorted face, blurry photo, cartoon, illustration, watermark, harsh lighting, overly smooth skin, fake effects",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.googleGemini",
      "typeVersion": 1,
      "position": [80, -1168],
      "id": "d9ed0e4c-e6b6-4cd3-9c00-e8ce8905f367",
      "name": "Generate an image1",
      "credentials": {
        "googlePalmApi": {
          "id": "vOr5yppPP00TgUXR",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    }
  ],
  "connections": {
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "TikTok Send",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "TikTok Send2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "TikTok Send2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "TikTok Trigger": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Generate an image1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate an image1": {
      "main": [
        [
          {
            "node": "TikTok Send1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "meta": {
    "instanceId": "66e483ae29cc6e31c00bbdceaba5c8b0ab5e144336e8a385acfa596fd4ff5c20"
  }
}
